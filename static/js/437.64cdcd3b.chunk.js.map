{"version":3,"file":"static/js/437.64cdcd3b.chunk.js","mappings":"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","sources":["redux/contacts/contactSelectors.js","webpack://react-homework-template/./src/components/MyContacts/MyContacts.module.css?73b2","webpack://react-homework-template/./src/components/MyContacts/ContactForm/ContactForm.module.css?093d","components/MyContacts/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactItem/ContactItem.module.css?e5a8","components/MyContacts/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/MyContacts/ContactList/ContactList.module.css?c740","components/MyContacts/ContactList/ContactList.jsx","redux/filters/filtersSelectors.js","webpack://react-homework-template/./src/components/MyContacts/Filter/Filter.module.css?6d66","components/MyContacts/Filter/Filter.jsx","webpack://react-homework-template/./src/components/Notification/Notification.module.css?a91f","components/Notification/Notification.jsx","components/MyContacts/MyContacts.jsx","pages/MyContactsPage/MyContactsPage.jsx"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items || [];\nexport const getIsLoading = ({ contacts }) => contacts.loading;\n\nexport const getFilteredContacts = ({ contacts, filter }) => {\n  if (!filter) {\n    return contacts.items;\n  }\n\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.items.filter(({ name }) => {\n    const normalizedName = name.toLowerCase();\n    return normalizedName.includes(normalizedFilter);\n  });\n\n  return result;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebookContainer\":\"MyContacts_phonebookContainer__mxVOy\",\"titlePhonebook\":\"MyContacts_titlePhonebook__tJbN6\",\"titleContacts\":\"MyContacts_titleContacts__5K95c MyContacts_titlePhonebook__tJbN6\",\"AllContacts\":\"MyContacts_AllContacts__fipjM\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__wDWPz\",\"label\":\"ContactForm_label__ZUV0d\",\"inputName\":\"ContactForm_inputName__r-48-\",\"inputNumber\":\"ContactForm_inputNumber__fa7KQ ContactForm_inputName__r-48-\",\"btnAddContact\":\"ContactForm_btnAddContact__duWkC\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { getContacts } from 'redux/contacts/contactSelectors';\nimport { Notify } from 'notiflix';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const nameAddIs = contacts.some(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    const numberAddIs = contacts.some(contact => contact.number === number);\n\n    if (nameAddIs) {\n      Notify.failure(`${name} is alredy in contacts`);\n      return;\n    } else if (numberAddIs) {\n      Notify.failure(`${number} is alredy in contacts`);\n      return;\n    }\n\n    onAddContact({ name, number });\n    setName('');\n    setNumber('');\n  };\n\n  const onAddContact = ({ name, number }) => {\n    const action = addContact({ name, number });\n    dispatch(action);\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.inputName}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.inputNumber}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.btnAddContact} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__j5Sg-\",\"contactItem\":\"ContactItem_contactItem__5ZYqg\",\"btnDeleteContact\":\"ContactItem_btnDeleteContact__MPTeJ\"};","import { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/contactOperations';\nimport css from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onRemoveContact = payload => {\n    dispatch(deleteContact(payload));\n  };\n\n  return (\n    <li className={css.listItem}>\n      <p className={css.contactItem}>\n        {name} {number}\n      </p>\n      <button\n        className={css.btnDeleteContact}\n        type=\"submit\"\n        onClick={() => onRemoveContact(id)}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__PZmSu\"};","import { useSelector } from 'react-redux';\nimport { getFilteredContacts } from 'redux/contacts/contactSelectors';\nimport ContactItem from '../ContactItem';\nimport css from './ContactList.module.css';\n\nconst ContactList = () => {\n  const contacts = useSelector(getFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, number }) => (\n        <ContactItem key={id} name={name} number={number} id={id} />\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","export const getStatusFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"filterSection\":\"Filter_filterSection__xbPpP\",\"filterInput\":\"Filter_filterInput__cXwzH\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { getStatusFilter } from 'redux/filters/filtersSelectors';\nimport { setStatusFilter } from 'redux/filters/filtersSlice';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getStatusFilter);\n  const dispatch = useDispatch();\n\n  const onChangeFilter = evt => {\n    dispatch(setStatusFilter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <div className={css.filterSection}>\n      <label className={css.filterLabel}>\n        Find contacts by name\n        <input\n          className={css.filterInput}\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={onChangeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"message\":\"Notification_message__iUHOw\"};","import css from './Notification.module.css';\n\nconst Notification = ({ message }) => {\n  return <p className={css.message}>{message}</p>;\n};\n\nexport default Notification;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { getContacts, getIsLoading } from 'redux/contacts/contactSelectors';\nimport { fetchContacts } from 'redux/contacts/contactOperations';\nimport styles from './MyContacts.module.css';\n\nimport ContactForm from './ContactForm';\nimport ContactList from './ContactList';\nimport Filter from './Filter';\nimport Notification from 'components/Notification';\nimport Loader from 'components/Loader/Loader';\n\nfunction MyContacts() {\n  const contacts = useSelector(getContacts);\n  const isContacts = Boolean(contacts.length);\n  const loading = useSelector(getIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      {loading && <Loader />}\n      <div className={styles.phonebookContainer}>\n        <h1 className={styles.titlePhonebook}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={styles.titleContacts}>Contacts</h2>\n        <div className={styles.AllContacts}>\n          All contacts: {contacts.length}\n        </div>\n\n        {isContacts ? (\n          <>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Notification message=\"Contact list is empty\" />\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default MyContacts;\n","import MyContacts from 'components/MyContacts/MyContacts';\n\nconst MyContactsPage = () => {\n  return (\n    <div>\n      <MyContacts />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n"],"names":["getContacts","contacts","items","getIsLoading","loading","getFilteredContacts","filter","normalizedFilter","toLowerCase","name","includes","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","handleChange","event","currentTarget","value","onAddContact","action","addContact","className","css","onSubmit","preventDefault","nameAddIs","some","contact","numberAddIs","Notify","onChange","type","pattern","title","required","id","onClick","payload","deleteContact","map","getStatusFilter","state","evt","setStatusFilter","trim","message","isContacts","Boolean","length","useEffect","fetchContacts","Loader","styles"],"sourceRoot":""}