{"version":3,"file":"static/js/1.3501fbd5.chunk.js","mappings":"uMAAaA,EAAe,CAC1BC,KAAM,GACNC,MAAO,GACPC,SAAU,ICFZ,EAAuB,2BAAvB,EAA0D,4BAA1D,EAA8F,4BAA9F,EAAkI,4BAAlI,EAAuK,6B,SCiEvK,EA9DqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACtB,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDL,aAAAA,EACAI,SAAAA,IAFME,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAKrBP,EAA0BK,EAA1BL,KAAMC,EAAoBI,EAApBJ,MAAOC,EAAaG,EAAbH,SAErB,OACE,kBAAMM,UAAWC,EAAaC,OAAO,GAAGP,SAAUI,EAAlD,WACE,iBAAKC,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcE,QAAQ,GAAxC,SAA2C,eAG3C,kBACEC,QAAQ,yHACRC,MAAOb,EACPA,KAAK,OACLc,SAAUR,EACVE,UAAWC,EACXM,KAAK,OACLC,MAAM,yJACNC,UAAQ,QAGZ,iBAAKT,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcE,QAAQ,GAAxC,SAA2C,iBAG3C,kBACEE,MAAOZ,EACPD,KAAK,QACLc,SAAUR,EACVE,UAAWC,EACXM,KAAK,QACLE,UAAQ,QAGZ,iBAAKT,UAAWC,EAAhB,WACE,kBAAOD,UAAWC,EAAcE,QAAQ,GAAxC,SAA2C,oBAG3C,kBACEE,MAAOX,EACPF,KAAK,WACLc,SAAUR,EACVE,UAAWC,EACXM,KAAK,WACLC,MAAM,kCACNC,UAAQ,QAIZ,gBAAKT,UAAWC,EAAhB,UACE,mBAAQD,UAAWC,EAAeM,KAAK,SAAvC,SAAgD,qBAMvD,E,oBC/DD,EAAgC,oCCwBhC,EAnBqB,WACnB,IAAMG,GAAWC,EAAAA,EAAAA,MACTC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAAvBF,OAMR,OACE,iBAAKZ,UAAWC,EAAhB,WACE,wBAAI,yBACJ,SAAC,EAAD,CAAcN,SAPC,SAAAoB,GACjBL,GAASM,EAAAA,EAAAA,IAAOD,GACjB,IAMIH,IACC,cAAGK,MAAO,CAAEC,MAAO,OAAnB,SAA4B,sCAInC,C,mECAD,IArBgB,SAAC,GAAgC,IAA9B3B,EAA6B,EAA7BA,aAAcI,EAAe,EAAfA,SAC/B,GAA0BwB,EAAAA,EAAAA,WAAS,UAAK5B,IAAxC,eAAOM,EAAP,KAAcuB,EAAd,KAEMtB,GAAeuB,EAAAA,EAAAA,cACnB,YAAiB,IAAdC,EAAa,EAAbA,OACO9B,EAAgB8B,EAAhB9B,KAAMa,EAAUiB,EAAVjB,MACde,GAAS,SAAAG,GACP,OAAO,kBAAKA,GAAZ,cAAwB/B,EAAOa,GAChC,GACF,GACD,CAACe,IAQH,MAAO,CAAEvB,MAAAA,EAAOuB,SAAAA,EAAUtB,aAAAA,EAAcC,aALnB,SAAAyB,GACnBA,EAAIC,iBACJ9B,GAAS,UAAKE,IACduB,GAAS,UAAK7B,GACf,EAEF,C","sources":["components/RegisterForm/initialState.js","webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","webpack://react-homework-template/./src/pages/RegisterPage/RegisterPage.module.css?fdcb","pages/RegisterPage/RegisterPage.jsx","service/api/hooks/useForm.js"],"sourcesContent":["export const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterForm_form__Tv43W\",\"group\":\"RegisterForm_group__kFqh2\",\"label\":\"RegisterForm_label__4pTXF\",\"input\":\"RegisterForm_input__FsgBz\",\"button\":\"RegisterForm_button__B3hFq\"};","import useForm from 'service/api/hooks/useForm';\nimport { initialState } from './initialState';\nimport styles from './RegisterForm.module.css';\n\nconst RegisterForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form className={styles.form} action=\"\" onSubmit={handleSubmit}>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          Username:\n        </label>\n        <input\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          value={name}\n          name=\"name\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"text\"\n          title=\"The name can only contain letters, an apostrophe, a dash, and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan, etc.\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          User email:\n        </label>\n        <input\n          value={email}\n          name=\"email\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"email\"\n          required\n        />\n      </div>\n      <div className={styles.group}>\n        <label className={styles.label} htmlFor=\"\">\n          User password:\n        </label>\n        <input\n          value={password}\n          name=\"password\"\n          onChange={handleChange}\n          className={styles.input}\n          type=\"password\"\n          title=\"Should be at least 7 characters\"\n          required\n        />\n      </div>\n\n      <div className={styles.group}>\n        <button className={styles.button} type=\"submit\">\n          Registration\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default RegisterForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"pageContainer\":\"RegisterPage_pageContainer__W5NHb\"};","import { useDispatch, useSelector } from 'react-redux';\nimport RegisterForm from 'components/RegisterForm/RegisterForm';\nimport { signup } from 'redux/auth/authOperations';\nimport { getAuthError } from 'redux/auth/authSelectors';\nimport styles from './RegisterPage.module.css';\n\nconst RegisterPage = () => {\n  const dispatch = useDispatch();\n  const { status } = useSelector(getAuthError);\n\n  const onRegister = data => {\n    dispatch(signup(data));\n  };\n\n  return (\n    <div className={styles.pageContainer}>\n      <h2>Create your accaunt</h2>\n      <RegisterForm onSubmit={onRegister} />\n      {status && (\n        <p style={{ color: 'red' }}>This user is already registered</p>\n      )}\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","import { useState, useCallback } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = useCallback(\n    ({ target }) => {\n      const { name, value } = target;\n      setState(prevState => {\n        return { ...prevState, [name]: value };\n      });\n    },\n    [setState]\n  );\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["initialState","name","email","password","onSubmit","useForm","state","handleChange","handleSubmit","className","styles","action","htmlFor","pattern","value","onChange","type","title","required","dispatch","useDispatch","status","useSelector","getAuthError","data","signup","style","color","useState","setState","useCallback","target","prevState","evt","preventDefault"],"sourceRoot":""}